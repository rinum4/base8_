&НаКлиенте
Перем мКонтекст;
&НаКлиенте
Перем РезультатВыполнения Экспорт;
&НаКлиенте
Перем ВозниклоИсключение Экспорт;
&НаКлиенте
Перем ТекстОшибкиОбработки Экспорт;
&НаКлиенте
Перем мВыполняетсяЗавершениеПоОбработчику;

// Обработчик создания формы на сервере
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	мРежимСовместимости = ТЦСервер.ПолучитьРежимСовместимостиКакСтроку();
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Ожидать завершение выполнения работы ВП (обработчик ожидания)
//
Процедура ОжидатьЗавершениеВыполнения()
	
	Если ТЦКлиент.ОбработатьОжиданиеВРМ(мКонтекст, ЭтаФорма) Тогда
		ОбновитьВРМ();
	КонецЕсли;
	
КонецПроцедуры // ОжидатьЗавершениеВыполнения()

&НаКлиенте
// Обработчик открытия формы
//
Процедура ПриОткрытии(Отказ)
	
	Попытка
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакончитьСозданиеВРМ", ЭтотОбъект);
		
		ТЦКлиент.НачатьСозданиеКонтекстаВРМ(ОписаниеОповещения,
			Параметры.Клиент,
			Параметры.Пользователь,
			Параметры.ВП,
			ЭтаФорма);

	Исключение
		ТЦОбщий.ЗаписатьВЖурнал(ИнформацияОбОшибке(), "ВРМ");
	КонецПопытки;
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ЗакончитьСозданиеВРМ(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("ИнформацияОбОшибке") Тогда
		
		ТЦОбщий.ЗаписатьВЖурнал(Результат, "ВРМ");
		Сообщить("Произошла ошибка при создании контекста ВРМ: " + ТЦОбщий.ИнформациюОбОшибкеВСтроку(Результат));
		Возврат;
		
	КонецЕсли;
	
	мКонтекст = Результат;
	УстановитьСсылкуВРМ(мКонтекст.ВРМ);
	
	// Зарегистрировать ВРМ в справочнике ТЦУправлениеТестом
	ТЦСервер.УстановитьТипКлиентскогоПриложения(ПредопределенноеЗначение("Перечисление.ТЦТипКлиентскогоПриложения.ВРМ"));
	
	ПараметрыОтвета = ТЦКлиент.ПараметрыОтветаВРМ(мКонтекст.ВРМ);
	ПараметрыОтвета.РезультатВыполнения = мКонтекст.Порт;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьОтправкуАгенту", ЭтотОбъект);
	
	ТЦКлиент.НачатьОтправкуАгенту(
		ОписаниеОповещения,
		мКонтекст,
		мКонтекст.Перечисления.ТЦСообщение.ГотовКработе,
		ПараметрыОтвета);

КонецПроцедуры

&НаКлиенте
// Завершение вызова внешней компоненты (отправка сообщения агенту).
//
Процедура ЗавершитьОтправкуАгенту(Результат, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(Результат) = Тип("ИнформацияОбОшибке") Тогда
		
		ТЦОбщий.ЗаписатьВЖурнал(Результат, "ВРМ");
		Сообщить("Произошла ошибка при отправке сообщения агенту: " + ТЦОбщий.ИнформациюОбОшибкеВСтроку(Результат));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик перед закрытием формы
//
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка8_3_7ИЛИЗавершениеРаботы8_3_8, ТекстПредупреждения = "", СтандартнаяОбработка8_3_8 = "")
	
	СисИнфо = Новый СистемнаяИнформация;
	ВерсияПлатформы = СисИнфо.ВерсияПриложения;
	
	// Проверим, нужно ли выполнить завершение работы через отказ от закрытия формы
	// (по причине запрета серверных вызовов при завершении работы в 8.3.8 и выше)
	Если ( мРежимСовместимости = "DontUse" И ТЦОбщий.СравнитьВерсии(ВерсияПлатформы, "8.3.8") >= 0
		ИЛИ ТЦОбщий.СравнитьВерсии(мРежимСовместимости, "8.3.8") >= 0 )
		И СтандартнаяОбработка8_3_7ИЛИЗавершениеРаботы8_3_8 = Истина Тогда
		
		Отказ = Истина;
		мВыполняетсяЗавершениеПоОбработчику = Истина;
		
		ТекстПредупреждения = "Для удаления текущего ВРМ из списка активных нажмите кнопку ""Продолжить работу""."
							  "ВРМ выполнит необходимые действия и завершит работу приложения автоматически.";
							  
		ПодключитьОбработчикОжидания("ЗавершитьРаботуВРМПоОбработчику", 0.1, Истина);
		Возврат;
		
	КонецЕсли;	
	
	Попытка
		ТЦКлиент.УдалитьКонтекстВРМ(мКонтекст);
	Исключение
		ТЦОбщий.ЗаписатьВЖурнал(ИнформацияОбОшибке(), "ВРМ");
	КонецПопытки;	

КонецПроцедуры

// Завершает работу агента, вызывается через обработчик ожидания после отказа в закрытии формы
//
&НаКлиенте
Процедура ЗавершитьРаботуВРМПоОбработчику()

	Попытка
		ТЦКлиент.УдалитьКонтекстВРМ(мКонтекст);
	Исключение
		ТЦОбщий.ЗаписатьВЖурнал(ИнформацияОбОшибке(), "ВРМ");
	КонецПопытки;
	
	ЗавершитьРаботуСистемы(Ложь);

КонецПроцедуры // ЗавершитьРаботуАгентаПоОбработчику()

&НаКлиенте
// Обработчик приема локальных сообщений
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ТЦКлиент.ОбработатьСообщениеВРМ(мКонтекст, Данные) Тогда
		ОбновитьВРМ();
		УстановитьЗаголовокПриложения("ВРМ " + Строка(Объект.Номер) + " (" + Объект.Роль + ")");
	КонецЕсли;
	
КонецПроцедуры // ВнешнееСобытие()

&НаСервере
// 
//
// Параметры:
//  
//
Процедура УстановитьСсылкуВРМ(Ссылка)
	
	ТекущийОбъект = Ссылка.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
	
КонецПроцедуры // УстановитьСсылкуВРМ()

// Обновляет информацию о ВРМ, отображающуюся на форме
//
&НаСервере
Процедура ОбновитьВРМ()
	
	НачатьТранзакцию();
	Прочитать();
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // ОбновитьВРМ()

// Инициировать закрытие ВРМ
//
// Параметры:
//  Команда	 - Команда
//
&НаКлиенте
Процедура ЗакрытьВРМ(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьЗакрытиеВРМ", ТЦКлиент);
	
	Попытка
		ТЦКлиент.НачатьУдалениеКонтекстаВРМ(ОписаниеОповещения, мКонтекст);
	Исключение
		ТЦОбщий.ЗаписатьВЖурнал(ИнформацияОбОшибке(), "ВРМ");
		ЗавершитьРаботуСистемы(Ложь, Ложь);
	КонецПопытки;
	
КонецПроцедуры
