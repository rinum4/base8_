&НаКлиенте
Процедура СконвертироватьСценарий(Команда)
	
	КоличествоВРМ_В_Сценарии = КоличествоВРМ_В_Сценарии(Сценарий);
	Если ОбщееКоличествоВРМ <> КоличествоВРМ_В_Сценарии Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Изменилось количество ВРМ в сценарии! Проверьте распределение ВРМ, и повторите операцию.";
		Сообщение.Поле = "ОбщееКоличествоВРМ";
		Сообщение.Сообщить();
		
		ОбщееКоличествоВРМ = КоличествоВРМ_В_Сценарии;
		ОбновитьРаспределениеВРМ();
		Возврат;
	КонецЕсли;
	
	ВыполнитьКонвертациюСценария();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивПараметров = РазделитьСтроку(СокрЛП(ПараметрЗапуска));
	
	Если МассивПараметров.Количество() < 3 Тогда
		ТЦСервер.ЗаписатьВЖурнал("Ошибка при получении параметров обработки конвертации скрипта: не задано ни одного сервера ВРМ
								 |Параметр запуска: " + ПараметрЗапуска + "
								 |Пример использования: ""C:\Program Files (x86)\1cv8\8.3.5.1174\bin\1cv8c.exe"" /IBConnectionString ""Srvr=""""MyServer"""";Ref=""""BP_CI"""";"" /N Admin /P 123 /Execute c:\ScriptConversion.epf /C ИмяСценария;http://http_server_name/ib_name;srv=vwp_name_1 w=1;srv=vwp_name_2 w=2;",
							Неопределено,
							ПредопределенноеЗначение("Перечисление.ТЦСтатусСообщения.Предупреждение"),
							Ложь);
		Возврат;
	КонецЕсли;
	
	ВыполнитьКонвертациюСценария();
	
	ЗавершитьРаботуСистемы(Ложь, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКонвертациюСценария()
	
	Если ДанныеДляЗаполнения.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо заполнить таблицу ВРМ!";
		Сообщение.Поле = "ДанныеДляЗаполнения";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		
		Возврат;
	КонецЕсли;
	
	// Проверка данных для заполнения
	Ошибка = Ложь;
	Для Каждого ТекСтр Из ДанныеДляЗаполнения Цикл
		Если ТекСтр.КоличествоВРМ = 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Неверно указан вес!";
			Сообщение.Поле = "ДанныеДляЗаполнения[" + ТекСтр.ПолучитьИдентификатор() + "].Вес";
			Сообщение.УстановитьДанные(ЭтаФорма);
			Сообщение.Сообщить();
			Ошибка = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибка Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьВеб = Не ПустаяСтрока(СтрокаСоединенияWeb);
	
	// ЗАПОЛНЕНИЕ ТАБЛИЦЫ ОПИСАНИЯ ИСХОДНОГО СЦЕНАРИЯ
	ОписаниеИсходногоСценария = Новый ТаблицаЗначений;
	ОписаниеИсходногоСценария.Колонки.Добавить("Роль");
	ОписаниеИсходногоСценария.Колонки.Добавить("Пользователь");
	ОписаниеИсходногоСценария.Колонки.Добавить("ЗначениеРазделителя");
	ОписаниеИсходногоСценария.Колонки.Добавить("Количество");
	ИменаКолонокСценария = "Роль,Пользователь,ЗначениеРазделителя";
	ИменаКолонокКлиента = "";
	
	МетаданныеТЦКлиент = Метаданные.Справочники.ТЦКлиенты;
	Для Каждого ТекРеквизит Из МетаданныеТЦКлиент.Реквизиты Цикл
		Если ТекРеквизит.Имя = "АдресБраузера"
			Или ТекРеквизит.Имя = "Компьютер"
			Или ТекРеквизит.Имя = "СтрокаЗапуска" Тогда
			Продолжить;
		КонецЕсли;
		ОписаниеИсходногоСценария.Колонки.Добавить(ТекРеквизит.Имя);
		ИменаКолонокКлиента = ИменаКолонокКлиента + ?(ПустаяСтрока(ИменаКолонокКлиента), "", ",") + ТекРеквизит.Имя;
	КонецЦикла;
	
	Для Каждого ТекСтр Из Сценарий.Структура Цикл
		НоваяСтрока = ОписаниеИсходногоСценария.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтр);
		Клиент = ТекСтр.Клиент;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Клиент);
		
		// Номер ВРМ
		Если ЕстьВеб И ЕстьРазделение Тогда
			ЗначениеРазделителя = "";
			ЭлементыАдресаБраузера = РазделитьСтроку(Клиент.АдресБраузера, "/");
			Если ЭлементыАдресаБраузера.Количество() > 0 Тогда
				ЗначениеРазделителя = ЭлементыАдресаБраузера[ЭлементыАдресаБраузера.ВГраница()];
				Если ПустаяСтрока(ЗначениеРазделителя) Тогда
					ЗначениеРазделителя = ЭлементыАдресаБраузера[ЭлементыАдресаБраузера.ВГраница()-1];
				КонецЕсли;
			КонецЕсли;
			НоваяСтрока.ЗначениеРазделителя = ЗначениеРазделителя;
		КонецЕсли;
		
	КонецЦикла;
	
	ИменаКолонок = ИменаКолонокСценария + "," + ИменаКолонокКлиента;
	ОписаниеИсходногоСценария.Свернуть(ИменаКолонок, "Количество");
	
	// ЗАПОЛНЕНИЕ ТАБЛИЦЫ ОПИСАНИЯ НОВОГО СЦЕНАРИЯ
	ОбщееКоличествоВРМ = ОписаниеИсходногоСценария.Итог("Количество");
	
	ОписаниеНовогоСценария = ОписаниеИсходногоСценария.СкопироватьКолонки();
	ОписаниеНовогоСценария.Колонки.Добавить("Компьютер");
	ОписаниеНовогоСценария.Колонки.Добавить("АдресБраузера");
	ИменаКолонокКлиента = ИменаКолонокКлиента + ",Компьютер,АдресБраузера";
	ИменаКолонок = ИменаКолонокСценария + "," + ИменаКолонокКлиента;
	
	КлючСтрокиСценария = Новый Структура("ИндексСтроки,НомерВРМ", 0, 1);
	Для Каждого СерверВРМ Из ДанныеДляЗаполнения Цикл
		
		Для НомерВРМ = 1 По СерверВРМ.КоличествоВРМ Цикл
			СтрокаСценария = ОписаниеНовогоСценария.Добавить();
			СтрокаИсходногоСценария = ПолучитьОписаниеСтрокиСценария(ОписаниеИсходногоСценария, КлючСтрокиСценария);
			ЗаполнитьЗначенияСвойств(СтрокаСценария, СтрокаИсходногоСценария);
			СтрокаСценария.Компьютер = ТЦСервер.НайтиКомпьютер(СерверВРМ.ИмяКомпьютера);
			Если ЕстьВеб Тогда
				СтрокаСценария.АдресБраузера = СтрокаСоединенияWeb + ?(Прав(СтрокаСоединенияWeb, 1) = "/", "", "/") + СтрокаСценария.ЗначениеРазделителя;
			Иначе
				СтрокаСценария.АдресБраузера = "";
			КонецЕсли;
			СтрокаСценария.Количество = 1;
		КонецЦикла;
		
	КонецЦикла;
	
	ОписаниеНовогоСценария.Свернуть(ИменаКолонок, "Количество");
	
	// ПЕРЕНОС ПОДГОТОВЛЕННЫХ ДАННЫХ В СЦЕНАРИЙ
	СценарийОбъект = Сценарий.ПолучитьОбъект();
	СценарийОбъект.Структура.Очистить();
	Для Каждого ТекСтр Из ОписаниеНовогоСценария Цикл
		НоваяСтрока = СценарийОбъект.Структура.Добавить();
		НоваяСтрока.Роль = ТекСтр.Роль;
		НоваяСтрока.Пользователь = ТекСтр.Пользователь;
		НоваяСтрока.Количество = ТекСтр.Количество;
		
		Клиент = ПолучитьКлиентаПоОписанию(ТекСтр, ИменаКолонокКлиента, ЕстьВеб, ЕстьРазделение);
		НоваяСтрока.Клиент = Клиент;
	КонецЦикла;
	
	Если СценарийОбъект.Структура.Количество() > 0 Тогда
		СценарийОбъект.Записать();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сценарий сконвертирован!";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКлиентаПоОписанию(ОписаниеСтрокиСценария, ПоляПоиска, ЕстьВеб, ЕстьРазделение)
	
	МассивПолейПоиска = РазделитьСтроку(ПоляПоиска, ",");
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТЦКлиенты.Ссылка
	|ИЗ
	|	Справочник.ТЦКлиенты КАК ТЦКлиенты
	|ГДЕ";
	
	ПервоеУсловие = Истина;
	Для Каждого ПолеПоиска Из МассивПолейПоиска Цикл
		ЗначениеПоляПоиска = ОписаниеСтрокиСценария[ПолеПоиска];
		СтрокаУсловия = ПолучитьСтрокуУсловия(ПолеПоиска, ЗначениеПоляПоиска, ПервоеУсловие);		
		ТекстЗапроса = ТекстЗапроса + "
		|	" + СтрокаУсловия;
		Запрос.УстановитьПараметр(ПолеПоиска, ЗначениеПоляПоиска);
		ПервоеУсловие = ?(ПервоеУсловие, Ложь, ПервоеУсловие);
	КонецЦикла;
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Клиент = Выборка.Ссылка;
	Иначе
		КлиентОбъект = Справочники.ТЦКлиенты.СоздатьЭлемент();
		Для Каждого ПолеПоиска Из МассивПолейПоиска Цикл
			ЗаполнитьЗначенияСвойств(КлиентОбъект, ОписаниеСтрокиСценария);
		КонецЦикла;
		
		// Формируем наименование клиента
		НаименованиеКлиента = Строка(КлиентОбъект.Компьютер);
		Если ЕстьВеб И ЕстьРазделение Тогда
			ДополнительныеПоляИмени = Новый Структура("АдресБраузера,ЗначениеРазделителя", "ws", Неопределено);
		ИначеЕсли ЕстьВеб Тогда
			ДополнительныеПоляИмени = Новый Структура("АдресБраузера", "ws");
		Иначе
			ДополнительныеПоляИмени = Новый Структура();
		КонецЕсли;
		
		ДопНаименованиеКлиента = "";
		Для Каждого ДопПолеИмени Из ДополнительныеПоляИмени Цикл
			ЗначениеРеквизита = ОписаниеСтрокиСценария[ДопПолеИмени.Ключ];
			Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				Если ДопПолеИмени.Значение = Неопределено Тогда
					// Заполняем значением реквизита
					ЗначениеДопПоля = Строка(ЗначениеРеквизита);
				Иначе
					// Заполняем предопределенным значением
					ЗначениеДопПоля = ДопПолеИмени.Значение;
				КонецЕсли;
				
				Если Не ПустаяСтрока(ЗначениеДопПоля) Тогда
					ДопНаименованиеКлиента = ДопНаименованиеКлиента
											+ ?(ПустаяСтрока(ДопНаименованиеКлиента), "", ", ")
											+ ЗначениеДопПоля;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ПустаяСтрока(ДопНаименованиеКлиента) Тогда
			НаименованиеКлиента = НаименованиеКлиента + " (" + ДопНаименованиеКлиента + ")"; // Например, "ER37-VWP-1 (ws, 00107)"
		КонецЕсли;
		КлиентОбъект.Наименование = НаименованиеКлиента;

		КлиентОбъект.Записать();
		Клиент = КлиентОбъект.Ссылка;
	КонецЕсли;
	
	Возврат Клиент;
	
КонецФункции

Функция ПолучитьОписаниеСтрокиСценария(ОписаниеИсходногоСценария, КлючСтрокиСценария)
	
	ИндексСтроки = КлючСтрокиСценария.ИндексСтроки;
	НомерВРМ = КлючСтрокиСценария.НомерВРМ;
	
	СтрокаИсходногоСценария = ОписаниеИсходногоСценария[ИндексСтроки];
	
	Если НомерВРМ <= СтрокаИсходногоСценария.Количество Тогда
		// Получаем описание ВРМ из текущей строки сценария
		СтрокаСценария = ОписаниеИсходногоСценария[ИндексСтроки];
		НомерВРМ = НомерВРМ + 1;
	Иначе
		// Получаем описание ВРМ из следующей строки сценария
		ИндексСтроки = ИндексСтроки + 1;
		НомерВРМ = 1;
		
		// Проверка на наличие строки с нужным индексом
		Если ИндексСтроки >= ОписаниеИсходногоСценария.Количество() Тогда
			Возврат Неопределено;
		КонецЕсли;

		СтрокаСценария = ОписаниеИсходногоСценария[ИндексСтроки];
		НомерВРМ = НомерВРМ + 1;
	КонецЕсли;
	
	КлючСтрокиСценария.ИндексСтроки = ИндексСтроки;
	КлючСтрокиСценария.НомерВРМ = НомерВРМ;
	
	Возврат СтрокаСценария;
	
КонецФункции

Функция РазделитьСтроку(ИсходнаяСтрока, Разделитель = ";", ПустыеСтроки = Ложь) Экспорт
	
	Результат = Новый Массив;
	ДлинаСтроки = СтрДлина(ИсходнаяСтрока);
	ТекущаяСтрока = "";
	
	Для Сч = 1 По ДлинаСтроки Цикл
		
		ТекущийСимвол = Сред(ИсходнаяСтрока, Сч, 1);
		
		Если ТекущийСимвол = Разделитель Тогда
			
			ОбработаннаяСтрока = СокрЛП(ТекущаяСтрока);
			
			Если Не ПустаяСтрока(ОбработаннаяСтрока) Или ПустыеСтроки Тогда
				Результат.Добавить(ОбработаннаяСтрока);
			КонецЕсли;
			
			ТекущаяСтрока = "";
			
		Иначе
			ТекущаяСтрока = ТекущаяСтрока + ТекущийСимвол;
		КонецЕсли;
		
	КонецЦикла;
	
	ОбработаннаяСтрока = СокрЛП(ТекущаяСтрока);
	
	Если Не ПустаяСтрока(ОбработаннаяСтрока) Тогда
		Результат.Добавить(ОбработаннаяСтрока);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // РазделитьСтроку()

Функция ПолучитьСтрокуУсловия(ИмяПоля, ЗначениеПоля, ПервоеУсловие)
	
	СтрокаУсловия = ?(ПервоеУсловие, "", "И ");
	Если ТипЗнч(ЗначениеПоля) = Тип("Строка") Тогда
		СтрокаУсловия = СтрокаУсловия + "ПОДСТРОКА(" + ИмяПоля + ", 0, 1000) = &" + ИмяПоля;
	Иначе
		СтрокаУсловия = СтрокаУсловия + ИмяПоля + " = &" + ИмяПоля;
	КонецЕсли;
	
	Возврат СтрокаУсловия;
	
КонецФункции

&НаКлиенте
Процедура ДанныеДляЗаполненияПриИзменении(Элемент)
	
	ОбновитьРаспределениеВРМ();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРаспределениеВРМ()
	
	СуммаВесов = ДанныеДляЗаполнения.Итог("Вес");
	Если СуммаВесов > 0 Тогда
		Для Каждого ТекСтр Из ДанныеДляЗаполнения Цикл
			ТекСтр.Коэффициент = ТекСтр.Вес / СуммаВесов;
		КонецЦикла;
		
		КоличествоРаспределенныхВРМ = 0;
		КоличествоСерверов = ДанныеДляЗаполнения.Количество();
		Для НомерСервера = 1 По КоличествоСерверов Цикл
			СерверВРМ = ДанныеДляЗаполнения[НомерСервера-1];
			
			Если НомерСервера = КоличествоСерверов Тогда
				КоличествоВРМ = ОбщееКоличествоВРМ - КоличествоРаспределенныхВРМ;
			Иначе
				КоличествоВРМ = Окр(ОбщееКоличествоВРМ * СерверВРМ.Коэффициент);
			КонецЕсли;
			СерверВРМ.КоличествоВРМ = КоличествоВРМ;
			КоличествоРаспределенныхВРМ = КоличествоРаспределенныхВРМ + КоличествоВРМ;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Сценарий) Тогда
		ОбщееКоличествоВРМ = КоличествоВРМ_В_Сценарии(Сценарий);
	Иначе
		ОбщееКоличествоВРМ = 0;
	КонецЕсли;
	
	ОбновитьРаспределениеВРМ();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоВРМ_В_Сценарии(Сценарий)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ТЦСценарииСтруктура.Количество), 0) КАК Количество
	|ИЗ
	|	Справочник.ТЦСценарии.Структура КАК ТЦСценарииСтруктура
	|ГДЕ
	|	ТЦСценарииСтруктура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Сценарий);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуВРМПоСценарию()
	
	ДанныеДляЗаполнения.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЦСценарииСтруктура.Клиент.Компьютер.Наименование КАК ИмяКомпьютера,
	               |	СУММА(ТЦСценарииСтруктура.Количество) КАК Вес,
	               |	0 КАК КоличествоВРМ,
	               |	0 КАК Коэффициент
	               |ИЗ
	               |	Справочник.ТЦСценарии.Структура КАК ТЦСценарииСтруктура
	               |ГДЕ
	               |	ТЦСценарииСтруктура.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЦСценарииСтруктура.Клиент.Компьютер.Наименование";
	
	Запрос.УстановитьПараметр("Ссылка", Сценарий);
	
	ДанныеДляЗаполнения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСценарию(Команда)
	
	ЗаполнитьТаблицуВРМПоСценарию();
	ОбновитьРаспределениеВРМ();
	
КонецПроцедуры
