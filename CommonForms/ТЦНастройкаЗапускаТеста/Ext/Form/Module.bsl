///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если  Параметры.Свойство("Сценарий") Тогда
		Сценарий = Параметры.Сценарий;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
		Возврат;
	КонецЕсли;
	
	ОценкаПроизводительностиИспользуется = ТЦСервер.ОценкаПроизводительностиИспользуется();
	УстановитьНастройкиПоСценарию(Сценарий);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура СценарийПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьНастройкиПоСценарию(Сценарий);
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	СценарийПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МаксимальноеКоличествоИтерацийПриИзменении(Элемент)
	
	Если МаксимальноеКоличествоИтераций = 0 Тогда
		МаксимальноеКоличествоИтераций = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачальноеКоличествоПользователейПриИзменении(Элемент)
	
	Если НачальноеКоличествоПользователей = 0 Тогда
		НачальноеКоличествоПользователей = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачальныйШагПриИзменении(Элемент)
	ШагиПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура КонечныйШагПриИзменении(Элемент)
	ШагиПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура КомпьютерыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элементы.Компьютеры.ТекущиеДанные.Вес = 0 Тогда
		Элементы.Компьютеры.ТекущиеДанные.Вес = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентИнтенсивностиПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(КоэффициентИнтенсивности) Тогда
		КоэффициентИнтенсивности = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КритическоеКПриИзменении(Элемент)
	ОшибкиПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура КритическоеКоличествоОшибокИтерацииПриИзменении(Элемент)
	ОшибкиПриИзменении();
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ПороговыйAPDEX.Видимость = ОценкаПроизводительностиИспользуется;
	Элементы.КонечныйШаг.Видимость = ОценкаПроизводительностиИспользуется;
	
КонецПроцедуры

&НаКлиенте
Процедура ШагиПриИзменении()
	
	Если КонечныйШаг > НачальныйШаг Тогда
		КонечныйШаг = НачальныйШаг;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиПриИзменении()
	
	Если КритическоеКоличествоОшибокИтерации > КритическоеКоличествоОшибокТеста Тогда
		КритическоеКоличествоОшибокИтерации = КритическоеКоличествоОшибокТеста;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьТест(Команда)
	
	Для Каждого СтрокаКомпьютеры Из Компьютеры Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаКомпьютеры.Вес) Тогда
			СтрокаКомпьютеры.Вес = 1;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаКомпьютеры.Компьютер) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Необходимо выбрать компьютер";
			Сообщение.Поле = "Компьютеры[" + Компьютеры.Индекс(СтрокаКомпьютеры) + "].Компьютер";
			Сообщение.УстановитьДанные(ЭтаФорма);
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
	Попытка
		ДатаНачала = ТекущаяДата();
		
		Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Необходимо выбрать сценарий";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
		
		Если ТЦСервер.БСППодсистемаИспользуется(ТЦОбщий.БСПИмяПодсистемыУправленияДоступом()) И Не ТЦСервер.БСПРольДоступна("ПолныеПрава") Тогда
			ПоказатьПредупреждение(,"В конфигурации используется подсистема управления доступом БСП.
							|Для корректной работы Тест-центра управляющее подключение должно быть запущено под пользователем с ролью ""ПолныеПрава"".");
			Возврат;
		КонецЕсли;
		
		Тест = ЗапуситьСценарийИПолучитьДокументТест();
		Если Тест = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Тест) Тогда
			ПоказатьПредупреждение(, "В данный момент уже выполняется тест," + Символы.ПС + "следует дождаться его окончания.", 30, "Ошибка");
			Возврат;
		КонецЕсли;
		
		ТЦКлиент.ПоказатьСостояниеТестирования();
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ТЦОбщий.ЗаписатьВЖурнал(Ошибка);
		ТЦКлиент.СообщитьОбОшибке(Ошибка, ДатаНачала, ТекущаяДата());
	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция ЗапуситьСценарийИПолучитьДокументТест()
	
	ТаблицаВесов = Неопределено;
	Если Компьютеры.Количество() > 0 Тогда
		ТаблицаВесов = Компьютеры.Выгрузить();
		ТаблицаВесов.Свернуть("Компьютер", "Вес");
	КонецЕсли;
	
	ПараметрыВыполнения = Новый Структура;
	ТЦОбщий.СформироватьИЛИДополнитьПараметрыВыполнения(ПараметрыВыполнения);
	
	ПараметрыВыполнения.ОбщееКоличествоОдновременноЗапускаемыхВРМ = ОбщееКоличествоОдновременноЗапускаемыхВРМ;
	ПараметрыВыполнения.КоличествоОдновременноЗапускаемыхВРМАгента = КоличествоОдновременноЗапускаемыхВРМАгента;
	
	ПараметрыВыполнения.НачальноеКоличествоПользователей = НачальноеКоличествоПользователей;
	ПараметрыВыполнения.НачальныйШагДозапускаПользователей = НачальныйШаг;
	ПараметрыВыполнения.КонечныйШагДозапускаПользователей = КонечныйШаг;
	ПараметрыВыполнения.ПороговыйAPDEX = ПороговыйAPDEX;
	ПараметрыВыполнения.МаксимальноеКоличествоИтераций = МаксимальноеКоличествоИтераций;
	ПараметрыВыполнения.КритическоеКоличествоОшибокИтерации = КритическоеКоличествоОшибокИтерации;
	ПараметрыВыполнения.КритическоеКоличествоОшибокТеста = КритическоеКоличествоОшибокТеста;
	ПараметрыВыполнения.ЭтоДинамическийТест = ЭтоДинамическийТест;
	ПараметрыВыполнения.РаспределятьПоКомпьютерамРавномерно = Ложь;
	ПараметрыВыполнения.КоэффициентИнтенсивности = КоэффициентИнтенсивности;
	ПараметрыВыполнения.АдресПубликации = СокрЛП(АдресПубликации);
	ПараметрыВыполнения.ЕстьРазделение = ЕстьРазделение;
	ПараметрыВыполнения.ТаблицаРаспределения = ТаблицаВесов;
	
	Тест = ТЦСервер.ВыполнитьСценарий(Сценарий, ПараметрыВыполнения);
											
	Возврат Тест;
	
КонецФункции
	
&НаСервере
Процедура ЗаполнитьКомпьютерыПоАгентамНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТЦАгенты.Компьютер КАК Компьютер,
	               |	1 КАК Вес
	               |ИЗ
	               |	Справочник.ТЦАгенты КАК ТЦАгенты";
				   
	Результат = Запрос.Выполнить();
	Компьютеры.Загрузить(Результат.Выгрузить());	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКомпьютерыПоАгентам(Команда)
	ЗаполнитьКомпьютерыПоАгентамНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицуРаспределения(Команда)
	Компьютеры.Очистить();
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиПоСценарию(Сценарий)
	
	НачальноеКоличествоПользователей = Сценарий.Структура.Итог("Количество");
	
	ОбщееКоличествоОдновременноЗапускаемыхВРМ = Сценарий.ОбщееКоличествоОдновременноЗапускаемыхВРМ;
	КоличествоОдновременноЗапускаемыхВРМАгента = Сценарий.КоличествоОдновременноЗапускаемыхВРМАгента;
	
	Если КоличествоОдновременноЗапускаемыхВРМАгента < 1 Тогда
		КоличествоОдновременноЗапускаемыхВРМАгента = 10;
	КонецЕсли;
	
	НачальныйШаг	= Макс(1, НачальноеКоличествоПользователей * 0.2);
	КонечныйШаг		= Макс(1, НачальноеКоличествоПользователей * 0.1);
	МаксимальноеКоличествоИтераций = 1;
	РазмерРезерваВРМ = 0;
	КритическоеКоличествоОшибокИтерации = 1;
	КритическоеКоличествоОшибокТеста = 0;
	КоэффициентИнтенсивности = 1;
	
КонецПроцедуры
